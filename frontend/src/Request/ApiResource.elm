{-
   AuthServer API
   AuthServer Idp

   The version of the OpenAPI document: v1

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Request.ApiResource exposing (apiResourceGet, apiResourcePost)

import Data.ApiResourceDto as ApiResourceDto exposing (ApiResourceDto)
import Uuid exposing (Uuid)
import Dict
import Http
import Json.Decode as Decode
import Url.Builder as Url




basePath : String
basePath =
    "https://localhost"


apiResourceGet :
    { onSend : Result Http.Error (List ApiResourceDto) -> msg





    }
    -> Cmd msg
apiResourceGet params =
    Http.request
        { method = "GET"
        , headers = List.filterMap identity []
        , url = Url.crossOrigin basePath
            ["ApiResource"]
            (List.filterMap identity [])
        , body = Http.emptyBody
        , expect = Http.expectJson params.onSend (Decode.list ApiResourceDto.decoder)
        , timeout = Just 30000
        , tracker = Nothing
        }


apiResourcePost :
    { onSend : Result Http.Error () -> msg




    , id : Maybe (Uuid)    , enabled : Maybe (Bool)    , name : Maybe (String)    , displayName : Maybe (String)    , description : Maybe (String)    , apiSecrets : Maybe (List String)    , scopes : Maybe (List String)
    }
    -> Cmd msg
apiResourcePost params =
    Http.request
        { method = "POST"
        , headers = List.filterMap identity []
        , url = Url.crossOrigin basePath
            ["ApiResource"]
            (List.filterMap identity [Maybe.map (Url.string "Id" << Uuid.toString) params.id, Maybe.map (Url.string "Enabled" << (\val -> if val then "true" else "false")) params.enabled, Maybe.map (Url.string "Name" << identity) params.name, Maybe.map (Url.string "DisplayName" << identity) params.displayName, Maybe.map (Url.string "Description" << identity) params.description, Maybe.map (Url.string "ApiSecrets" << String.join "," << List.map identity) params.apiSecrets, Maybe.map (Url.string "Scopes" << String.join "," << List.map identity) params.scopes])
        , body = Http.emptyBody
        , expect = Http.expectWhatever params.onSend
        , timeout = Just 30000
        , tracker = Nothing
        }
