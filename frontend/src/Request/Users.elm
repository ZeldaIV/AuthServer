{-
   AuthServer API
   AuthServer Idp

   The version of the OpenAPI document: v1

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Request.Users exposing (usersGet, usersPut)

import Data.UserDto as UserDto exposing (UserDto)
import Dict
import Http
import Json.Decode as Decode
import Url.Builder as Url




basePath : String
basePath =
    "https://localhost:5001"


usersGet :
    { onSend : Result Http.Error (List UserDto) -> msg





    }
    -> Cmd msg
usersGet params =
    Http.request
        { method = "GET"
        , headers = List.filterMap identity []
        , url = Url.crossOrigin basePath
            ["Users"]
            (List.filterMap identity [])
        , body = Http.emptyBody
        , expect = Http.expectJson params.onSend (Decode.list UserDto.decoder)
        , timeout = Just 30000
        , tracker = Nothing
        }


usersPut :
    { onSend : Result Http.Error Bool -> msg




    , userName : Maybe (String)    , email : Maybe (String)    , emailConfirmed : Maybe (Bool)    , phoneNumber : Maybe (String)    , phoneNumberConfirmed : Maybe (Bool)    , twoFactorEnabled : Maybe (Bool)
    }
    -> Cmd msg
usersPut params =
    Http.request
        { method = "PUT"
        , headers = List.filterMap identity []
        , url = Url.crossOrigin basePath
            ["Users"]
            (List.filterMap identity [Maybe.map (Url.string "UserName" << identity) params.userName, Maybe.map (Url.string "Email" << identity) params.email, Maybe.map (Url.string "EmailConfirmed" << (\val -> if val then "true" else "false")) params.emailConfirmed, Maybe.map (Url.string "PhoneNumber" << identity) params.phoneNumber, Maybe.map (Url.string "PhoneNumberConfirmed" << (\val -> if val then "true" else "false")) params.phoneNumberConfirmed, Maybe.map (Url.string "TwoFactorEnabled" << (\val -> if val then "true" else "false")) params.twoFactorEnabled])
        , body = Http.emptyBody
        , expect = Http.expectJson params.onSend Decode.bool
        , timeout = Just 30000
        , tracker = Nothing
        }
