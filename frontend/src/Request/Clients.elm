{-
   AuthServer API
   AuthServer Idp

   The version of the OpenAPI document: v1

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Request.Clients exposing (clientsGet, clientsPut)

import Data.ClientDto as ClientDto exposing (ClientDto)
import Data.Object as Object exposing (Object)
import Uuid exposing (Uuid)
import Dict
import Http
import Json.Decode as Decode
import Url.Builder as Url




basePath : String
basePath =
    "https://localhost"


clientsGet :
    { onSend : Result Http.Error (List ClientDto) -> msg





    }
    -> Cmd msg
clientsGet params =
    Http.request
        { method = "GET"
        , headers = List.filterMap identity []
        , url = Url.crossOrigin basePath
            ["Clients"]
            (List.filterMap identity [])
        , body = Http.emptyBody
        , expect = Http.expectJson params.onSend (Decode.list ClientDto.decoder)
        , timeout = Just 30000
        , tracker = Nothing
        }


clientsPut :
    { onSend : Result Http.Error Bool -> msg




    , clientId : Maybe (Uuid)    , enabled : Maybe (Bool)    , clientSecrets : Maybe (List String)    , allowedGrantTypes : Maybe (Object)    , redirectUris : Maybe (List String)    , allowedScopes : Maybe (List String)    , postLogoutRedirectUris : Maybe (List String)
    }
    -> Cmd msg
clientsPut params =
    Http.request
        { method = "PUT"
        , headers = List.filterMap identity []
        , url = Url.crossOrigin basePath
            ["Clients"]
            (List.filterMap identity [Maybe.map (Url.string "ClientId" << Uuid.toString) params.clientId, Maybe.map (Url.string "Enabled" << (\val -> if val then "true" else "false")) params.enabled, Maybe.map (Url.string "ClientSecrets" << String.join "," << List.map identity) params.clientSecrets, Maybe.map (Url.string "AllowedGrantTypes" << Object.toString) params.allowedGrantTypes, Maybe.map (Url.string "RedirectUris" << String.join "," << List.map identity) params.redirectUris, Maybe.map (Url.string "AllowedScopes" << String.join "," << List.map identity) params.allowedScopes, Maybe.map (Url.string "PostLogoutRedirectUris" << String.join "," << List.map identity) params.postLogoutRedirectUris])
        , body = Http.emptyBody
        , expect = Http.expectJson params.onSend Decode.bool
        , timeout = Just 30000
        , tracker = Nothing
        }
