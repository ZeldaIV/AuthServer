-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Query exposing (..)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)


type alias AuthorizationByIdRequiredArguments =
    { id : Api.ScalarCodecs.Uuid }


authorizationById :
    AuthorizationByIdRequiredArguments
    -> SelectionSet decodesTo Api.Object.AuthorizationDto
    -> SelectionSet (Maybe decodesTo) RootQuery
authorizationById requiredArgs____ object____ =
    Object.selectionForCompositeField "authorizationById" [ Argument.required "id" requiredArgs____.id (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecUuid) ] object____ (Basics.identity >> Decode.nullable)


authorization :
    SelectionSet decodesTo Api.Object.AuthorizationDto
    -> SelectionSet (List decodesTo) RootQuery
authorization object____ =
    Object.selectionForCompositeField "authorization" [] object____ (Basics.identity >> Decode.list)


clients :
    SelectionSet decodesTo Api.Object.ClientDto
    -> SelectionSet (List decodesTo) RootQuery
clients object____ =
    Object.selectionForCompositeField "clients" [] object____ (Basics.identity >> Decode.list)


type alias ClientByIdRequiredArguments =
    { id : Api.ScalarCodecs.Uuid }


clientById :
    ClientByIdRequiredArguments
    -> SelectionSet decodesTo Api.Object.ClientDto
    -> SelectionSet (Maybe decodesTo) RootQuery
clientById requiredArgs____ object____ =
    Object.selectionForCompositeField "clientById" [ Argument.required "id" requiredArgs____.id (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecUuid) ] object____ (Basics.identity >> Decode.nullable)


type alias UserByIdRequiredArguments =
    { id : String }


userById :
    UserByIdRequiredArguments
    -> SelectionSet decodesTo Api.Object.UserDto
    -> SelectionSet (Maybe decodesTo) RootQuery
userById requiredArgs____ object____ =
    Object.selectionForCompositeField "userById" [ Argument.required "id" requiredArgs____.id Encode.string ] object____ (Basics.identity >> Decode.nullable)


users :
    SelectionSet decodesTo Api.Object.UserDto
    -> SelectionSet (List decodesTo) RootQuery
users object____ =
    Object.selectionForCompositeField "users" [] object____ (Basics.identity >> Decode.list)


type alias ScopeByIdRequiredArguments =
    { id : Int }


scopeById :
    ScopeByIdRequiredArguments
    -> SelectionSet decodesTo Api.Object.ScopeDto
    -> SelectionSet (Maybe decodesTo) RootQuery
scopeById requiredArgs____ object____ =
    Object.selectionForCompositeField "scopeById" [ Argument.required "id" requiredArgs____.id Encode.int ] object____ (Basics.identity >> Decode.nullable)


scopes :
    SelectionSet decodesTo Api.Object.ScopeDto
    -> SelectionSet (List decodesTo) RootQuery
scopes object____ =
    Object.selectionForCompositeField "scopes" [] object____ (Basics.identity >> Decode.list)
