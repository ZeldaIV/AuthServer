{-
   AuthServer API
   AuthServer Idp

   The version of the OpenAPI document: v1

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Data.LogoutInputModel exposing (LogoutInputModel, decoder, encode, encodeWithTag, toString)

import Dict exposing (Dict)
import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (optional, required)
import Json.Encode as Encode


type alias LogoutInputModel =
    { logoutId : (Maybe String)
    }


decoder : Decoder LogoutInputModel
decoder =
    Decode.succeed LogoutInputModel
        |> optional "logoutId" (Decode.nullable Decode.string) Nothing



encode : LogoutInputModel -> Encode.Value
encode =
    Encode.object << encodePairs


encodeWithTag : ( String, String ) -> LogoutInputModel -> Encode.Value
encodeWithTag (tagField, tag) model =
    Encode.object <| encodePairs model ++ [ ( tagField, Encode.string tag ) ]


encodePairs : LogoutInputModel -> List (String, Encode.Value)
encodePairs model =
    [ ( "logoutId", Maybe.withDefault Encode.null (Maybe.map Encode.string model.logoutId) )
    ]



toString : LogoutInputModel -> String
toString =
    Encode.encode 0 << encode




