{-
   AuthServer API
   AuthServer Idp

   The version of the OpenAPI document: v1

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Data.ApiResourcePropertyDto exposing (ApiResourcePropertyDto, decoder, encode, encodeWithTag, toString)

import Dict exposing (Dict)
import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (optional, required)
import Json.Encode as Encode


type alias ApiResourcePropertyDto =
    { id : Maybe (Int)
    , key : (Maybe String)
    , value : (Maybe String)
    }


decoder : Decoder ApiResourcePropertyDto
decoder =
    Decode.succeed ApiResourcePropertyDto
        |> optional "id" (Decode.nullable Decode.int) Nothing
        |> optional "key" (Decode.nullable Decode.string) Nothing
        |> optional "value" (Decode.nullable Decode.string) Nothing



encode : ApiResourcePropertyDto -> Encode.Value
encode =
    Encode.object << encodePairs


encodeWithTag : ( String, String ) -> ApiResourcePropertyDto -> Encode.Value
encodeWithTag (tagField, tag) model =
    Encode.object <| encodePairs model ++ [ ( tagField, Encode.string tag ) ]


encodePairs : ApiResourcePropertyDto -> List (String, Encode.Value)
encodePairs model =
    [ ( "id", Maybe.withDefault Encode.null (Maybe.map Encode.int model.id) )
    , ( "key", Maybe.withDefault Encode.null (Maybe.map Encode.string model.key) )
    , ( "value", Maybe.withDefault Encode.null (Maybe.map Encode.string model.value) )
    ]



toString : ApiResourcePropertyDto -> String
toString =
    Encode.encode 0 << encode




