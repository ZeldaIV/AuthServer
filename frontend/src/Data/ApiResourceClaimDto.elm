{-
   AuthServer API
   AuthServer Idp

   The version of the OpenAPI document: v1

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Data.ApiResourceClaimDto exposing (ApiResourceClaimDto, decoder, encode, encodeWithTag, toString)

import Dict exposing (Dict)
import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (optional, required)
import Json.Encode as Encode


type alias ApiResourceClaimDto =
    { id : Maybe (Int)
    , type_ : (Maybe String)
    }


decoder : Decoder ApiResourceClaimDto
decoder =
    Decode.succeed ApiResourceClaimDto
        |> optional "id" (Decode.nullable Decode.int) Nothing
        |> optional "type" (Decode.nullable Decode.string) Nothing



encode : ApiResourceClaimDto -> Encode.Value
encode =
    Encode.object << encodePairs


encodeWithTag : ( String, String ) -> ApiResourceClaimDto -> Encode.Value
encodeWithTag (tagField, tag) model =
    Encode.object <| encodePairs model ++ [ ( tagField, Encode.string tag ) ]


encodePairs : ApiResourceClaimDto -> List (String, Encode.Value)
encodePairs model =
    [ ( "id", Maybe.withDefault Encode.null (Maybe.map Encode.int model.id) )
    , ( "type", Maybe.withDefault Encode.null (Maybe.map Encode.string model.type_) )
    ]



toString : ApiResourceClaimDto -> String
toString =
    Encode.encode 0 << encode




