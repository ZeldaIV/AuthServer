openapi: 3.0.1
info:
  title: AuthServer API
  description: AuthServer Idp
  version: v1
servers:
  - url: https://localhost
paths:
  /Account:
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Success
  /Account/logout:
    post:
      tags:
        - Account
      parameters:
        - name: LogoutId
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /Account/user:
    get:
      tags:
        - Account
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserDto'
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
            text/json:
              schema:
                $ref: '#/components/schemas/UserDto'
  /Account/isSignedIn:
    get:
      tags:
        - Account
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /ApiResource:
    get:
      tags:
        - ApiResource
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiResourceDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiResourceDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiResourceDto'
    put:
      tags:
        - ApiResource
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ApiResourceDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ApiResourceDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ApiResourceDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApiResourceDto'
      responses:
        '200':
          description: Success
    patch:
      tags:
        - ApiResource
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ApiResourceDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ApiResourceDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ApiResourceDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApiResourceDto'
      responses:
        '200':
          description: Success
  /Clients:
    get:
      tags:
        - Clients
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientDto'
    put:
      tags:
        - Clients
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ClientDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ClientDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ClientDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ClientDto'
      responses:
        '200':
          description: Success
    patch:
      tags:
        - Clients
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ClientDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ClientDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ClientDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ClientDto'
      responses:
        '200':
          description: Success
  /Scopes:
    get:
      tags:
        - Scopes
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScopeDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScopeDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScopeDto'
    put:
      tags:
        - Scopes
      parameters:
        - name: Name
          in: query
          schema:
            type: string
        - name: DisplayName
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /Users:
    get:
      tags:
        - Users
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'
    put:
      tags:
        - Users
      parameters:
        - name: UserName
          in: query
          schema:
            type: string
        - name: Email
          in: query
          schema:
            type: string
        - name: EmailConfirmed
          in: query
          schema:
            type: boolean
        - name: PhoneNumber
          in: query
          schema:
            type: string
        - name: PhoneNumberConfirmed
          in: query
          schema:
            type: boolean
        - name: TwoFactorEnabled
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
components:
  schemas:
    ApiResourceDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        enabled:
          type: boolean
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        apiSecrets:
          type: array
          items:
            type: string
          nullable: true
        scopes:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    ClientDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        clientId:
          type: string
          nullable: true
        enabled:
          type: boolean
        clientName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        clientUri:
          type: string
          nullable: true
        logoUri:
          type: string
          nullable: true
        clientSecrets:
          type: array
          items:
            type: string
          nullable: true
        allowedGrantTypes:
          type: array
          items:
            enum:
              - NotSet
              - Implicit
              - ImplicitAndClientCredentials
              - Code
              - CodeAndClientCredentials
              - Hybrid
              - HybridAndClientCredentials
              - ClientCredentials
              - ResourceOwnerPassword
              - ResourceOwnerPasswordAndClientCredentials
              - DeviceFlow
            type: string
          nullable: true
        redirectUris:
          type: array
          items:
            type: string
          nullable: true
        allowedScopes:
          type: array
          items:
            type: string
          nullable: true
        postLogoutRedirectUris:
          type: array
          items:
            type: string
          nullable: true
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
          nullable: true
        lastAccessed:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    LoginRequest:
      type: object
      properties:
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        returnUrl:
          type: string
          nullable: true
      additionalProperties: false
    ScopeDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
      additionalProperties: false
    UserDto:
      type: object
      properties:
        userName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        emailConfirmed:
          type: boolean
        phoneNumber:
          type: string
          nullable: true
        phoneNumberConfirmed:
          type: boolean
        twoFactorEnabled:
          type: boolean
      additionalProperties: false