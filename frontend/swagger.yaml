openapi: 3.0.1
info:
  title: AuthServer API
  description: AuthServer Idp
  version: v1
servers:
  - url: https://localhost:3001
paths:
  /Account:
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Success
  /Account/logout:
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoutInputModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LogoutInputModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LogoutInputModel'
      responses:
        '200':
          description: Success
  /Account/user:
    get:
      tags:
        - Account
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /ApiResource:
    get:
      tags:
        - ApiResource
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiResourceDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiResourceDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiResourceDto'
    post:
      tags:
        - ApiResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiResourceDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ApiResourceDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApiResourceDto'
      responses:
        '200':
          description: Success
  /Clients:
    get:
      tags:
        - Clients
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientDto'
    put:
      tags:
        - Clients
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ClientDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ClientDto'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /Scopes:
    get:
      tags:
        - Scopes
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScopeDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScopeDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScopeDto'
    put:
      tags:
        - Scopes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopeDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ScopeDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ScopeDto'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /Users:
    get:
      tags:
        - Users
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'
    put:
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UserDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserDto'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
components:
  schemas:
    LoginRequest:
      type: object
      properties:
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        returnUrl:
          type: string
          nullable: true
      additionalProperties: false
    LogoutInputModel:
      type: object
      properties:
        logoutId:
          type: string
          nullable: true
      additionalProperties: false
    ApiResourceDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        enabled:
          type: boolean
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        apiSecrets:
          type: array
          items:
            type: string
          nullable: true
        scopes:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    GrantTypesDto:
      type: object
      additionalProperties: false
    ClientDto:
      type: object
      properties:
        clientId:
          type: string
          format: uuid
        enabled:
          type: boolean
        clientSecrets:
          type: array
          items:
            type: string
          nullable: true
        allowedGrantTypes:
          $ref: '#/components/schemas/GrantTypesDto'
        redirectUris:
          type: array
          items:
            type: string
          nullable: true
        allowedScopes:
          type: array
          items:
            type: string
          nullable: true
        postLogoutRedirectUris:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    ScopeDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
      additionalProperties: false
    UserDto:
      type: object
      properties:
        userName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        emailConfirmed:
          type: boolean
        phoneNumber:
          type: string
          nullable: true
        phoneNumberConfirmed:
          type: boolean
        twoFactorEnabled:
          type: boolean
      additionalProperties: false